{
  "$schema": "https://raw.githubusercontent.com/Azure/enterprise-azure-policy-as-code/main/Schemas/policy-definition-schema.json",
  "name": "Deploy_ServiceHealth_ActionGroups",
  "properties": {
    "displayName": "Deploy Service Health Action Group",
    "description": "Policy to deploy action group for Service Health alerts",
    "mode": "All",
    "metadata": {
      "_deployed_by_amba": "True",
      "alzCloudEnvironments": [
        "AzureCloud"
      ],
      "version": "1.2.0",
      "category": "Monitoring",
      "source": "https://github.com/Azure/azure-monitor-baseline-alerts/"
    },
    "parameters": {
      "monitorDisable": {
        "defaultValue": "MonitorDisable",
        "metadata": {
          "description": "Tag name to disable monitoring  Subscription level alerts. Set to true if monitoring should be disabled",
          "displayName": "Monitoring disabled"
        },
        "type": "String"
      },
      "alzMonitorActionGroupEmail": {
        "defaultValue": "",
        "metadata": {
          "description": "Email addresses to send alerts to",
          "displayName": "Action Group Email Addresses"
        },
        "type": "String"
      },
      "alzMonitorResourceGroupLocation": {
        "defaultValue": "centralus",
        "metadata": {
          "description": "Location of the Resource group the alert is placed in",
          "displayName": "Resource Group Location"
        },
        "type": "String"
      },
      "byoActionGroup": {
        "defaultValue": "",
        "metadata": {
          "description": "The Resource ID of an existing Action Group already deployed by the customer in his environment",
          "displayName": "Customer defined Action Group Resource ID"
        },
        "type": "String"
      },
      "alzMonitorResourceGroupTags": {
        "defaultValue": {
          "_deployed_by_amba": true
        },
        "metadata": {
          "description": "Tags on the Resource group the alert is placed in",
          "displayName": "Resource Group Tags"
        },
        "type": "Object"
      },
      "alzMonitorResourceGroupName": {
        "defaultValue": "rg-amba-monitoring-001",
        "metadata": {
          "description": "Resource group the alert is placed in",
          "displayName": "Resource Group Name"
        },
        "type": "String"
      },
      "byoAlertProcessingRule": {
        "defaultValue": "",
        "metadata": {
          "description": "The Resource ID of an existing Alert Processing Rule already deployed by the customer in his environment",
          "displayName": "Customer defined Alert Processing Rule Resource ID"
        },
        "type": "String"
      },
      "alzLogicappCallbackUrl": {
        "defaultValue": "",
        "metadata": {
          "description": "Callback URL that triggers the Logic App",
          "displayName": "Logic App Callback URL"
        },
        "type": "String"
      },
      "alzFunctionTriggerUrl": {
        "defaultValue": "",
        "metadata": {
          "description": "URL that triggers the Function",
          "displayName": "Function Trigger URL"
        },
        "type": "String"
      },
      "alzEventHubResourceId": {
        "defaultValue": "",
        "metadata": {
          "description": "Event Hub resource id for action group to send alerts to",
          "displayName": "Event Hub resource id"
        },
        "type": "String"
      },
      "alzLogicappResourceId": {
        "defaultValue": "",
        "metadata": {
          "description": "Logic App Resource Id for Action Group to send alerts to",
          "displayName": "Logic App Resource Id"
        },
        "type": "String"
      },
      "alzFunctionResourceId": {
        "defaultValue": "",
        "metadata": {
          "description": "Function Resource Id for Action Group to send alerts to",
          "displayName": "Function Resource Id"
        },
        "type": "String"
      },
      "alzWebhookServiceUri": {
        "defaultValue": "",
        "metadata": {
          "description": "Indicates the service uri of the webhook to send alerts to",
          "displayName": "Webhook Service Uri"
        },
        "type": "String"
      },
      "alzArmRoleId": {
        "defaultValue": "",
        "metadata": {
          "description": "Arm Built-in Role Id for action group to send alerts to a subscription level, will only send to individual members of role",
          "displayName": "Arm Role Id"
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Resources/subscriptions",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('MonitorDisable'), ']')]",
            "notEquals": "true"
          },
          {
            "value": "[empty(parameters('BYOActionGroup'))]",
            "equals": "true"
          }
        ]
      },
      "then": {
        "effect": "deployIfNotExists",
        "details": {
          "type": "Microsoft.Insights/actionGroups",
          "existenceCondition": {
            "allOf": [
              {
                "value": "[empty(parameters('BYOActionGroup'))]",
                "equals": true
              },
              {
                "equals": "SH-ActGrp",
                "field": "Microsoft.Insights/actionGroups/groupShortName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "deployment": {
            "properties": {
              "parameters": {
                "ALZMonitorActionGroupEmail": {
                  "value": "[parameters('ALZMonitorActionGroupEmail')]"
                },
                "BYOActionGroup": {
                  "value": "[parameters('BYOActionGroup')]"
                },
                "ALZMonitorResourceGroupName": {
                  "value": "[parameters('ALZMonitorResourceGroupName')]"
                },
                "ALZMonitorResourceGroupLocation": {
                  "value": "[parameters('ALZMonitorResourceGroupLocation')]"
                },
                "BYOAlertProcessingRule": {
                  "value": "[parameters('BYOAlertProcessingRule')]"
                },
                "ALZLogicappCallbackUrl": {
                  "value": "[parameters('ALZLogicappCallbackUrl')]"
                },
                "ALZEventHubResourceId": {
                  "value": "[parameters('ALZEventHubResourceId')]"
                },
                "ALZFunctionResourceId": {
                  "value": "[parameters('ALZFunctionResourceId')]"
                },
                "ALZFunctionTriggerUrl": {
                  "value": "[parameters('ALZFunctionTriggerUrl')]"
                },
                "ALZLogicappResourceId": {
                  "value": "[parameters('ALZLogicappResourceId')]"
                },
                "ALZWebhookServiceUri": {
                  "value": "[parameters('ALZWebhookServiceUri')]"
                },
                "ALZMonitorResourceGroupTags": {
                  "value": "[parameters('ALZMonitorResourceGroupTags')]"
                },
                "ALZArmRoleId": {
                  "value": "[parameters('ALZArmRoleId')]"
                }
              },
              "template": {
                "parameters": {
                  "ALZMonitorActionGroupEmail": {
                    "type": "string"
                  },
                  "BYOActionGroup": {
                    "type": "String"
                  },
                  "ALZMonitorResourceGroupName": {
                    "type": "string"
                  },
                  "ALZMonitorResourceGroupLocation": {
                    "type": "string"
                  },
                  "BYOAlertProcessingRule": {
                    "type": "String"
                  },
                  "ALZLogicappCallbackUrl": {
                    "type": "String"
                  },
                  "ALZEventHubResourceId": {
                    "type": "string"
                  },
                  "ALZFunctionResourceId": {
                    "type": "string"
                  },
                  "ALZFunctionTriggerUrl": {
                    "type": "String"
                  },
                  "ALZLogicappResourceId": {
                    "type": "string"
                  },
                  "ALZWebhookServiceUri": {
                    "type": "string"
                  },
                  "ALZMonitorResourceGroupTags": {
                    "type": "object"
                  },
                  "ALZArmRoleId": {
                    "type": "string"
                  }
                },
                "contentVersion": "1.0.0.0",
                "variables": {
                  "varALZMonitorActionGroupEmail": "[array(split(parameters('ALZMonitorActionGroupEmail'),','))]",
                  "varAzureFunctionReceivers": [
                    {
                      "name": "AlzFa-0",
                      "useCommonAlertSchema": true,
                      "functionAppResourceId": "[if(empty(parameters('ALZFunctionResourceId')), null(), split(trim(parameters('ALZFunctionResourceId')),'/functions/')[0])]",
                      "httpTriggerUrl": "[if(empty(parameters('ALZFunctionTriggerUrl')), null(), trim(parameters('ALZFunctionTriggerUrl')))]",
                      "functionName": "[if(empty(parameters('ALZFunctionResourceId')), null(), split(trim(parameters('ALZFunctionResourceId')),'/')[10])]"
                    }
                  ],
                  "varALZEventHubResourceId": "[array(split(parameters('ALZEventHubResourceId'),','))]",
                  "copy": [
                    {
                      "name": "varEmailReceivers",
                      "mode": "serial",
                      "count": "[length(variables('varALZMonitorActionGroupEmail'))]",
                      "input": {
                        "name": "[concat('AlzMail-', indexOf(variables('varALZMonitorActionGroupEmail'), variables('varALZMonitorActionGroupEmail')[copyIndex('varEmailReceivers')]))]",
                        "useCommonSchema": true,
                        "emailAddress": "[trim(variables('varALZMonitorActionGroupEmail')[copyIndex('varEmailReceivers')])]"
                      }
                    },
                    {
                      "name": "varArmRoleReceivers",
                      "mode": "serial",
                      "count": "[length(variables('varALZArmRoleId'))]",
                      "input": {
                        "name": "[concat('AlzARM-', indexOf(variables('varALZArmRoleId'), variables('varALZArmRoleId')[copyIndex('varArmRoleReceivers')]))]",
                        "useCommonSchema": true,
                        "roleId": "[trim(variables('varALZArmRoleId')[copyIndex('varArmRoleReceivers')])]"
                      }
                    },
                    {
                      "name": "varEventHubReceivers",
                      "mode": "serial",
                      "count": "[length(variables('varALZEventHubResourceId'))]",
                      "input": {
                        "subscriptionId": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(variables('varALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[2])]",
                        "name": "[concat('AlzEH-', indexOf(variables('varALZEventHubResourceId'), variables('varALZEventHubResourceId')[copyIndex('varEventHubReceivers')]))]",
                        "useCommonAlertSchema": true,
                        "tenantId": "[subscription().tenantId]",
                        "eventHubNameSpace": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(variables('varALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[8])]",
                        "eventHubName": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(variables('varALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[10])]"
                      }
                    },
                    {
                      "name": "varWebhookReceivers",
                      "mode": "serial",
                      "count": "[length(variables('varALZWebhookServiceUri'))]",
                      "input": {
                        "name": "[concat('AlzWh-', indexOf(variables('varALZWebhookServiceUri'), variables('varALZWebhookServiceUri')[copyIndex('varWebhookReceivers')]))]",
                        "useCommonAlertSchema": true,
                        "tenantId": "null()",
                        "identifierUri": "null()",
                        "useAadAuth": "false",
                        "serviceUri": "[trim(variables('varALZWebhookServiceUri')[copyIndex('varWebhookReceivers')])]",
                        "objectId": "null()"
                      }
                    }
                  ],
                  "varALZWebhookServiceUri": "[array(split(parameters('ALZWebhookServiceUri'),','))]",
                  "varLogicAppReceivers": [
                    {
                      "resourceId": "[if(empty(parameters('ALZLogicappResourceId')), null(), trim(parameters('ALZLogicappResourceId')))]",
                      "name": "AlzLA-0",
                      "useCommonSchema": true,
                      "callbackUrl": "[if(empty(parameters('ALZLogicappCallbackUrl')), null(), trim(parameters('ALZLogicappCallbackUrl')))]"
                    }
                  ],
                  "varALZArmRoleId": "[array(split(parameters('ALZArmRoleId'),','))]"
                },
                "resources": [
                  {
                    "type": "Microsoft.Resources/resourceGroups",
                    "apiVersion": "2021-04-01",
                    "location": "[parameters('ALZMonitorResourceGroupLocation')]",
                    "name": "[parameters('ALZMonitorResourceGroupName')]",
                    "tags": "[parameters('ALZMonitorResourceGroupTags')]"
                  },
                  {
                    "resourceGroup": "[parameters('ALZMonitorResourceGroupName')]",
                    "type": "Microsoft.Resources/deployments",
                    "properties": {
                      "parameters": {
                        "ALZMonitorActionGroupEmail": {
                          "value": "[parameters('ALZMonitorActionGroupEmail')]"
                        },
                        "BYOActionGroup": {
                          "value": "[parameters('BYOActionGroup')]"
                        },
                        "ALZMonitorResourceGroupName": {
                          "value": "[parameters('ALZMonitorResourceGroupName')]"
                        },
                        "BYOAlertProcessingRule": {
                          "value": "[parameters('BYOAlertProcessingRule')]"
                        },
                        "ALZLogicappCallbackUrl": {
                          "value": "[parameters('ALZLogicappCallbackUrl')]"
                        },
                        "ALZEventHubResourceId": {
                          "value": "[parameters('ALZEventHubResourceId')]"
                        },
                        "ALZFunctionResourceId": {
                          "value": "[parameters('ALZFunctionResourceId')]"
                        },
                        "ALZFunctionTriggerUrl": {
                          "value": "[parameters('ALZFunctionTriggerUrl')]"
                        },
                        "ALZLogicappResourceId": {
                          "value": "[parameters('ALZLogicappResourceId')]"
                        },
                        "ALZWebhookServiceUri": {
                          "value": "[parameters('ALZWebhookServiceUri')]"
                        },
                        "ALZArmRoleId": {
                          "value": "[parameters('ALZArmRoleId')]"
                        }
                      },
                      "template": {
                        "parameters": {
                          "ALZMonitorActionGroupEmail": {
                            "type": "string"
                          },
                          "BYOActionGroup": {
                            "type": "string"
                          },
                          "ALZMonitorResourceGroupName": {
                            "type": "string"
                          },
                          "BYOAlertProcessingRule": {
                            "type": "String"
                          },
                          "ALZLogicappCallbackUrl": {
                            "type": "string"
                          },
                          "ALZEventHubResourceId": {
                            "type": "string"
                          },
                          "ALZFunctionResourceId": {
                            "type": "string"
                          },
                          "ALZFunctionTriggerUrl": {
                            "type": "string"
                          },
                          "ALZLogicappResourceId": {
                            "type": "string"
                          },
                          "ALZWebhookServiceUri": {
                            "type": "string"
                          },
                          "ALZArmRoleId": {
                            "type": "string"
                          }
                        },
                        "contentVersion": "1.0.0.0",
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Insights/actionGroups",
                            "properties": {
                              "enabled": true,
                              "azureFunctionReceivers": "[if(empty(parameters('ALZFunctionResourceId')), null(), variables('varAzureFunctionReceivers'))]",
                              "logicAppReceivers": "[if(empty(parameters('ALZLogicappResourceId')), null(), variables('varLogicAppReceivers'))]",
                              "eventHubReceivers": "[if(empty(parameters('ALZEventHubResourceId')), null(), variables('varEventHubReceivers'))]",
                              "webhookReceivers": "[if(empty(parameters('ALZWebhookServiceUri')), null(), variables('varWebhookReceivers'))]",
                              "armRoleReceivers": "[if(empty(parameters('ALZArmRoleId')), null(), variables('varArmRoleReceivers'))]",
                              "groupShortName": "SH-ActGrp",
                              "emailReceivers": "[if(empty(parameters('ALZMonitorActionGroupEmail')), null(), variables('varEmailReceivers'))]"
                            },
                            "apiVersion": "2023-01-01",
                            "location": "Global",
                            "name": "[concat('ag-AMBA-SH-', subscription().displayName, '-001')]",
                            "tags": {
                              "_deployed_by_amba": true
                            },
                            "condition": "[empty(parameters('BYOActionGroup'))]"
                          }
                        ],
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                      },
                      "mode": "Incremental"
                    },
                    "apiVersion": "2019-10-01",
                    "name": "SH-ActionGroupDeployment",
                    "dependsOn": [
                      "[concat('Microsoft.Resources/resourceGroups/', parameters('ALZMonitorResourceGroupName'))]"
                    ]
                  }
                ],
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
              },
              "mode": "incremental"
            },
            "location": "australiaeast"
          },
          "resourceGroupName": "[parameters('ALZMonitorResourceGroupName')]",
          "deploymentScope": "subscription",
          "existenceScope": "resourceGroup"
        }
      }
    }
  }
}