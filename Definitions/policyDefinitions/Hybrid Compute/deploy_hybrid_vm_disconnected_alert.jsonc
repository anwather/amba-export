{
  "$schema": "https://raw.githubusercontent.com/Azure/enterprise-azure-policy-as-code/main/Schemas/policy-definition-schema.json",
  "name": "Deploy_Hybrid_VM_Disconnected_Alert",
  "properties": {
    "displayName": "Deploy Hybrid VM Disconnected Alert",
    "description": "Policy to Deploy Hybrid VM Disconnected Alert",
    "mode": "All",
    "metadata": {
      "_deployed_by_amba": "True",
      "category": "Hybrid Compute",
      "alzCloudEnvironments": [
        "AzureCloud"
      ],
      "version": "1.0.0",
      "source": "https://github.com/Azure/azure-monitor-baseline-alerts/"
    },
    "parameters": {
      "evaluationFrequency": {
        "metadata": {
          "description": "Evaluation frequency for the alert",
          "displayName": "Evaluation Frequency"
        },
        "allowedValues": [
          "PT12H",
          "P1D"
        ],
        "defaultValue": "P1D",
        "type": "String"
      },
      "autoMitigate": {
        "metadata": {
          "description": "Auto Mitigate for the alert",
          "displayName": "Auto Mitigate"
        },
        "allowedValues": [
          "true",
          "false"
        ],
        "defaultValue": "true",
        "type": "String"
      },
      "effect": {
        "metadata": {
          "description": "Effect of the policy",
          "displayName": "Effect"
        },
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ],
        "defaultValue": "deployIfNotExists",
        "type": "String"
      },
      "windowSize": {
        "metadata": {
          "description": "Window size for the alert",
          "displayName": "Window Size"
        },
        "allowedValues": [
          "PT12H",
          "P1D"
        ],
        "defaultValue": "P1D",
        "type": "String"
      },
      "alertResourceGroupLocation": {
        "metadata": {
          "description": "Location of the Resource group the alert is placed in",
          "displayName": "Resource Group Location"
        },
        "defaultValue": "eastus",
        "type": "String"
      },
      "enabled": {
        "metadata": {
          "description": "Alert state for the alert",
          "displayName": "Alert State"
        },
        "allowedValues": [
          "true",
          "false"
        ],
        "defaultValue": "true",
        "type": "String"
      },
      "alertResourceGroupName": {
        "metadata": {
          "description": "Resource group the alert is placed in",
          "displayName": "Resource Group Name"
        },
        "defaultValue": "rg-amba-monitoring-001",
        "type": "String"
      },
      "severity": {
        "metadata": {
          "description": "Severity of the Alert",
          "displayName": "Severity"
        },
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ],
        "defaultValue": "1",
        "type": "String"
      },
      "threshold": {
        "metadata": {
          "description": "Threshold for the alert",
          "displayName": "Threshold"
        },
        "defaultValue": "0",
        "type": "String"
      },
      "timeAggregation": {
        "metadata": {
          "displayName": "TimeAggregation"
        },
        "allowedValues": [
          "Average",
          "Maximum",
          "Minimum",
          "Total",
          "Count"
        ],
        "defaultValue": "Count",
        "type": "String"
      },
      "alertResourceGroupTags": {
        "metadata": {
          "description": "Tags on the Resource group the alert is placed in",
          "displayName": "Resource Group Tags"
        },
        "defaultValue": {
          "Project": "amba-monitoring"
        },
        "type": "Object"
      },
      "failingPeriods": {
        "metadata": {
          "description": "Number of failing periods before alert is fired",
          "displayName": "Failing Periods"
        },
        "defaultValue": "1",
        "type": "String"
      },
      "operator": {
        "metadata": {
          "displayName": "Operator"
        },
        "allowedValues": [
          "Equals",
          "GreaterThan",
          "GreaterThanOrEqual",
          "LessThan",
          "LessThanOrEqual"
        ],
        "defaultValue": "GreaterThan",
        "type": "String"
      },
      "evaluationPeriods": {
        "metadata": {
          "description": "The number of aggregated lookback points.",
          "displayName": "Evaluation Periods"
        },
        "defaultValue": "1",
        "type": "String"
      },
      "BYOUserAssignedManagedIdentityResourceId": {
        "metadata": {
          "description": "The resource Id of the user assigned managed identity provided by the customer.",
          "displayName": "Customer defined User Assigned managed Identity resource Id."
        },
        "defaultValue": "",
        "type": "string"
      },
      "userAssignedManagedIdentityName": {
        "metadata": {
          "description": "The name of the user assigned managed identity to be created for monitoring purpose.",
          "displayName": "Name of the user assigned managed identity to be created."
        },
        "defaultValue": "id-AMBA-ARG-Reader-001",
        "type": "string"
      },
      "managementSubscriptionId": {
        "metadata": {
          "description": "The subscription ID of the management subscription where the user assigned managed identity will be created."
        },
        "defaultValue": "",
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "microsoft.hybridcompute/machines",
            "field": "type"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.Insights/scheduledQueryRules",
          "existenceCondition": {
            "allOf": [
              {
                "equals": "[concat(subscription().displayName, '-HybridVMDisconnected')]",
                "field": "Microsoft.Insights/scheduledQueryRules/displayName"
              },
              {
                "equals": "[subscription().id]",
                "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
              },
              {
                "equals": "[parameters('enabled')]",
                "field": "Microsoft.Insights/scheduledQueryRules/enabled"
              },
              {
                "equals": "[parameters('evaluationFrequency')]",
                "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
              },
              {
                "equals": "[parameters('windowSize')]",
                "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
              },
              {
                "equals": "[parameters('severity')]",
                "field": "Microsoft.Insights/scheduledQueryRules/severity"
              },
              {
                "equals": "[parameters('autoMitigate')]",
                "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
              },
              {
                "equals": 0,
                "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].threshold"
              },
              {
                "equals": "[parameters('operator')]",
                "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
              },
              {
                "equals": "[parameters('timeAggregation')]",
                "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
              },
              {
                "equals": "[parameters('evaluationPeriods')]",
                "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
              },
              {
                "equals": "[parameters('failingPeriods')]",
                "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
              },
              {
                "equals": "[format('arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | where tostring(properties.status) == \"Disconnected\" | extend lastContactedDate = todatetime(properties.lastStatusChange) | where lastContactedDate <= ago({0}d) | extend status = tostring(properties.status) | project id, Computer=name, status, lastContactedDate', parameters('threshold'))]",
                "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "deployment": {
            "properties": {
              "parameters": {
                "evaluationFrequency": {
                  "value": "[parameters('evaluationFrequency')]"
                },
                "autoMitigate": {
                  "value": "[parameters('autoMitigate')]"
                },
                "windowSize": {
                  "value": "[parameters('windowSize')]"
                },
                "alertResourceGroupLocation": {
                  "value": "[parameters('alertResourceGroupLocation')]"
                },
                "enabled": {
                  "value": "[parameters('enabled')]"
                },
                "alertResourceGroupName": {
                  "value": "[parameters('alertResourceGroupName')]"
                },
                "severity": {
                  "value": "[parameters('severity')]"
                },
                "threshold": {
                  "value": "[parameters('threshold')]"
                },
                "timeAggregation": {
                  "value": "[parameters('timeAggregation')]"
                },
                "alertResourceGroupTags": {
                  "value": "[parameters('alertResourceGroupTags')]"
                },
                "failingPeriods": {
                  "value": "[parameters('failingPeriods')]"
                },
                "operator": {
                  "value": "[parameters('operator')]"
                },
                "evaluationPeriods": {
                  "value": "[parameters('evaluationPeriods')]"
                },
                "BYOUserAssignedManagedIdentityResourceId": {
                  "value": "[parameters('BYOUserAssignedManagedIdentityResourceId')]"
                },
                "userAssignedManagedIdentityName": {
                  "value": "[parameters('userAssignedManagedIdentityName')]"
                },
                "managementSubscriptionId": {
                  "value": "[parameters('managementSubscriptionId')]"
                }
              },
              "template": {
                "parameters": {
                  "evaluationFrequency": {
                    "type": "String"
                  },
                  "autoMitigate": {
                    "type": "String"
                  },
                  "windowSize": {
                    "type": "String"
                  },
                  "alertResourceGroupLocation": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "String"
                  },
                  "alertResourceGroupName": {
                    "type": "string"
                  },
                  "severity": {
                    "type": "String"
                  },
                  "threshold": {
                    "type": "String"
                  },
                  "timeAggregation": {
                    "type": "String"
                  },
                  "alertResourceGroupTags": {
                    "type": "object"
                  },
                  "failingPeriods": {
                    "type": "String"
                  },
                  "operator": {
                    "type": "String"
                  },
                  "evaluationPeriods": {
                    "type": "String"
                  },
                  "BYOUserAssignedManagedIdentityResourceId": {
                    "type": "string"
                  },
                  "userAssignedManagedIdentityName": {
                    "type": "string"
                  },
                  "managementSubscriptionId": {
                    "type": "string"
                  }
                },
                "contentVersion": "1.0.0.0",
                "resources": [
                  {
                    "type": "Microsoft.Resources/resourceGroups",
                    "apiVersion": "2021-04-01",
                    "location": "[parameters('alertResourceGroupLocation')]",
                    "name": "[parameters('alertResourceGroupName')]",
                    "tags": "[parameters('alertResourceGroupTags')]"
                  },
                  {
                    "resourceGroup": "[parameters('alertResourceGroupName')]",
                    "type": "Microsoft.Resources/deployments",
                    "properties": {
                      "parameters": {
                        "alertResourceGroupLocation": {
                          "value": "[parameters('alertResourceGroupLocation')]"
                        },
                        "enabled": {
                          "value": "[parameters('enabled')]"
                        },
                        "alertResourceGroupName": {
                          "value": "[parameters('alertResourceGroupName')]"
                        },
                        "BYOUserAssignedManagedIdentityResourceId": {
                          "value": "[parameters('BYOUserAssignedManagedIdentityResourceId')]"
                        },
                        "userAssignedManagedIdentityName": {
                          "value": "[parameters('userAssignedManagedIdentityName')]"
                        },
                        "managementSubscriptionId": {
                          "value": "[parameters('managementSubscriptionId')]"
                        }
                      },
                      "template": {
                        "parameters": {
                          "alertResourceGroupLocation": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "string"
                          },
                          "alertResourceGroupName": {
                            "type": "string"
                          },
                          "BYOUserAssignedManagedIdentityResourceId": {
                            "type": "string"
                          },
                          "userAssignedManagedIdentityName": {
                            "type": "string"
                          },
                          "managementSubscriptionId": {
                            "type": "string"
                          }
                        },
                        "contentVersion": "1.0.0.0",
                        "resources": [
                          {
                            "type": "Microsoft.Insights/scheduledQueryRules",
                            "properties": {
                              "description": "Hybrid VM in disconnected state. Not being connected, prevents extensions to be correctly managed from the portal and Azure policies to be correctly applied. Ensure that both server the specific service (Azure Hybrid Instance Metadata Service on Windows or azcmagent on Linux) are running.",
                              "displayName": "[concat(subscription().displayName, '-HybridVMDisconnected')]",
                              "parameters": {
                                "evaluationFrequency": {
                                  "value": "[parameters('evaluationFrequency')]"
                                },
                                "autoMitigate": {
                                  "value": "[parameters('autoMitigate')]"
                                },
                                "windowSize": {
                                  "value": "[parameters('windowSize')]"
                                },
                                "alertResourceGroupLocation": {
                                  "value": "[parameters('alertResourceGroupLocation')]"
                                },
                                "enabled": {
                                  "value": "[parameters('enabled')]"
                                },
                                "alertResourceGroupName": {
                                  "value": "[parameters('alertResourceGroupName')]"
                                },
                                "severity": {
                                  "value": "[parameters('severity')]"
                                },
                                "threshold": {
                                  "value": "[parameters('threshold')]"
                                },
                                "failingPeriods": {
                                  "value": "[parameters('failingPeriods')]"
                                },
                                "evaluationPeriods": {
                                  "value": "[parameters('evaluationPeriods')]"
                                },
                                "BYOUserAssignedManagedIdentityResourceId": {
                                  "value": "[parameters('BYOUserAssignedManagedIdentityResourceId')]"
                                },
                                "userAssignedManagedIdentityName": {
                                  "value": "[parameters('userAssignedManagedIdentityName')]"
                                },
                                "managementSubscriptionId": {
                                  "value": "[parameters('managementSubscriptionId')]"
                                }
                              },
                              "evaluationFrequency": "[parameters('evaluationFrequency')]",
                              "autoMitigate": "false",
                              "windowSize": "[parameters('windowSize')]",
                              "enabled": "[parameters('enabled')]",
                              "severity": "[parameters('severity')]",
                              "criteria": {
                                "allOf": [
                                  {
                                    "threshold": 0,
                                    "timeAggregation": "[parameters('timeAggregation')]",
                                    "failingPeriods": {
                                      "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                      "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                    },
                                    "operator": "[parameters('operator')]",
                                    "resourceIdColumn": "id",
                                    "dimensions": [],
                                    "query": "[format('arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | where tostring(properties.status) == \"Disconnected\" | extend lastContactedDate = todatetime(properties.lastStatusChange) | where lastContactedDate <= ago({0}d) | extend status = tostring(properties.status) | project id, Computer=name, status, lastContactedDate', parameters('threshold'))]"
                                  }
                                ]
                              },
                              "scopes": [
                                "[subscription().Id]"
                              ],
                              "targetResourceTypes": [
                                "Microsoft.HybridCompute/machines"
                              ]
                            },
                            "apiVersion": "2022-08-01-preview",
                            "location": "[parameters('alertResourceGroupLocation')]",
                            "name": "[concat(subscription().displayName, '-HybridVMDisconnected')]",
                            "tags": {
                              "_deployed_by_amba": true
                            },
                            "identity": {
                              "type": "UserAssigned",
                              "userAssignedIdentities": {
                                "[variables('uamiResourceId')]": {}
                              }
                            }
                          }
                        ],
                        "variables": {},
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                      },
                      "mode": "Incremental"
                    },
                    "apiVersion": "2019-10-01",
                    "name": "HybridVMDisconnectedAlert",
                    "dependsOn": [
                      "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                    ]
                  }
                ],
                "variables": {
                  "uamiResourceId": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), resourceId(parameters('managementSubscriptionId'), parameters('alertResourceGroupName'), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
                },
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
              },
              "mode": "incremental"
            },
            "location": "australiaeast"
          },
          "resourceGroupName": "[parameters('alertResourceGroupName')]",
          "deploymentScope": "subscription",
          "existenceScope": "resourceGroup"
        }
      }
    }
  }
}